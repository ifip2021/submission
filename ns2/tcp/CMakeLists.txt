add_library(libtcp OBJECT
        linux/src/tcp_bic.c
        linux/src/tcp_compound.c
        linux/src/tcp_cong.c
        linux/src/tcp_cubic.c
        linux/src/tcp_highspeed.c
        linux/src/tcp_htcp.c
        linux/src/tcp_hybla.c
        linux/src/tcp_illinois.c
        linux/src/tcp_lp.c
        linux/src/tcp_scalable.c
        linux/src/tcp_vegas.c
        linux/src/tcp_vegas.h
        linux/src/tcp_veno.c
        linux/src/tcp_westwood.c
        linux/src/tcp_yeah.c
        linux/ns-linux-c.c
        linux/ns-linux-c.h
        linux/ns-linux-param.c
        linux/ns-linux-param.h
        linux/ns-linux-util.cc
        linux/ns-linux-util.h
        linux/tcp_naivereno.c
        ack-recons.cc
        ack-recons.h
        chost.cc
        chost.h
        formula-with-inverse.h
        formula.h
        nilist.cc
        nilist.h
        rq.cc
        rq.h
        rtcp.cc
        saack.cc
        scoreboard-rh.cc
        scoreboard-rh.h
        scoreboard-rq.cc
        scoreboard-rq.h
        scoreboard.cc
        scoreboard.h
        scoreboard1.cc
        scoreboard1.h
        snoop.cc
        snoop.h
        tcp-abs.cc
        tcp-abs.h
        tcp-asym-fs.cc
        tcp-asym-sink.cc
        tcp-asym.cc
        tcp-asym.h
        tcp-fack.cc
        tcp-fack.h
        tcp-fs.cc
        tcp-fs.h
        tcp-full.cc
        tcp-full.h
        tcp-int.cc
        tcp-int.h
        tcp-linux.cc
        tcp-linux.h
        tcp-newreno.cc
        tcp-rbp.cc
        tcp-reno.cc
        tcp-rfc793edu.cc
        tcp-rfc793edu.h
        tcp-sack-rh.cc
        tcp-sack1.cc
        tcp-session.cc
        tcp-session.h
        tcp-sink.cc
        tcp-sink.h
        tcp-vegas.cc
        tcp.cc
        tcp.h
        tcplib-telnet.cc
        template.h
        tfrc-sink.cc
        tfrc-sink.h
        tfrc.cc
        tfrc.h
        tcp_header.h)
target_include_directories(libtcp PUBLIC
        ${CMAKE_CURRENT_SOURCE_DIR}
        $<TARGET_PROPERTY:libcommon,INTERFACE_INCLUDE_DIRECTORIES>
        $<TARGET_PROPERTY:libqueue,INTERFACE_INCLUDE_DIRECTORIES>
        $<TARGET_PROPERTY:libadc,INTERFACE_INCLUDE_DIRECTORIES>
        )

if(WITH_QS)
    target_include_directories(libtcp PUBLIC
        $<TARGET_PROPERTY:libqs,INTERFACE_INCLUDE_DIRECTORIES>
        )
endif()
if(WITH_DELAY_CC)
    target_link_libraries(libtcp PUBLIC libdelay_cc)
endif()
